## What is it?
It's a Serialization API for Action Script 3 intended to describe complex data type into XML, and back to typed object.

## Which objects does it take?
Anything you can describe, including Vectors, Array, ArrayCollections, XMLList, XML

## How does it work?
`var xml:XML = Serializer.serialize( myDataTransferObject );
var myObject:MyDataTransferObject = Serializer.deserialize( xml );`

## How do I configure my classes?
`[Serialize] public var id:int;`
`[Serialize] public function getMeSomeString():String{ return "someString" };`
`[Serialize] public function get someString():String{ return "someString" };`
`[Serialize] public var playlists:Vector.<PlaylistInfo>;`

`//public class PlaylistInfo`
`[Serialize] public var artist:String;`
`[Serialize] public var songTitle:String;`

## Not all. You can Create, Read, Update, and Delete them to and from XML
Almost. You can use it as a "toString()" of your objects, and Create, Read, Update, and Delete them to and from XML with the ICrud:
 
## CRUD operations
#Create
`var serializer:SerializerCRUD = new SerializerCRUD('http://localhost:8888/serializer/');  `
`serializer.update(myPlaylist, 1); `

#Destroy
` serializer.destroy(PlaylistVoCollection, 1); `

#Retrieve
`serializer.addEventListener(PersisterEvent.ON_RETRIEVED, onRetrieved);`
`serializer.retrieve( PlaylistVoCollection, 1 );`

`private function onRetrieved(e:PersisterEvent):void`
`{`
    `var serializedPlaylistCollection:PlaylistVoCollection = e.retrievedItem;`
`}`


